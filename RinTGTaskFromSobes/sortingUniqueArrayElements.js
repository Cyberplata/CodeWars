/*
// Дан массив
// сonst arr = [1,1,2,2,2,5,5,5,2,7]

// Необходимо вернуть новый массив, содержащий уникальные элементы из исходного массива,
// отсортированные по частоте их появления в порядке убывания.
// То есть, числа, которые встречаются чаще, должны идти раньше.
// Например, в данном массиве число 2 встречается чаще всего (4 раза),
// затем идет число 5 (3 раза), далее число 1 (2 раза) и, наконец, число 7 (1 раз).

// Таким образом, результат должен быть:
// [2, 5, 1, 7]


Был в четверг собес, была такая задачка
*/

function sortingUniqueArrayElements(arr) {
    const countMap = {};

    for (let i = 0; i < arr.length; i++) {
        const key = arr[i];
        if (countMap[key] !== undefined) {
            countMap[key]++;
        } else {
            countMap[key] = 1;
        }
    }
    console.log(countMap); // { '1': 2, '2': 4, '5': 3, '7': 1 }

    let sortedArray = Object.entries(countMap) // [['1', 2], ['2', 4], ['5', 3], ['7', 1]]
        .sort((a,b) => b[1] - a[1]) // [['2', 4], ['5', 3], ['1', 2], ['7', 1]]
        .map(([key]) => Number(key));
    console.log('sortedArray', sortedArray); // sortedArray [ 2, 5, 1, 7 ]

    return sortedArray;
}

const res = sortingUniqueArrayElements([1,1,2,2,2,5,5,5,2,7]);
console.log(res) // [2, 5, 1, 7]






/*
Частота — это второе значение в каждой паре, т.е. a[1] или b[1] (встречаемость числа в массиве). Например:
Для пары ['2', 4] частота = 4.
Для пары ['5', 3] частота = 3

[key] означает, что мы берём только первый элемент из каждой пары (ключ).
Number(key) — приводит строковый ключ ('1', '2', ...) к числу, чтобы итоговый массив был числовым ([2, 5, 1, 7] вместо ['2', '5', '1', '7']).
*/

//var 2
function sortingUniqueArrayElements(arr) {
    return [...new Set(arr)] // Убираем дубликаты
        .map((num) => [num, arr.filter((x) => x === num).length]) // Создаём пары [число, частота]
        .sort((a, b) => b[1] - a[1]) // Сортируем по убыванию частот
        .map(([num]) => num); // Берём только числа
}

const res = sortingUniqueArrayElements([1, 1, 2, 2, 2, 5, 5, 5, 2, 7]);
console.log(res); // [2, 5, 1, 7]
